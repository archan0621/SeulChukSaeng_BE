name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          
      # application.properties 파일 생성
      - name: Make application.yml
        run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          
          echo "${{ secrets.DATABASE_PROPERTIES }}" >> ./application.yml
        shell: bash
          
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: 'seulchuksaeng'
          mysql root password: ${{ secrets.MYSQL_PASSWORD }}

      # gradlew 파일 실행권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # Gradle build (Test 제외)
      - name: Build with Gradle
        run: ./gradlew clean --stacktrace --info build
        shell: bash

      # create application-vultr.yml
      - name: Make application-vultr.yml
        run: |
          cd ./src/main/resources
          rm ./application.yml
          
          ls -al
          touch ./application.yml
          
          echo "copy properties"
          echo "${{ secrets.VULTR_DATABASE_PROPERTIES }}" >> ./application.yml
        shell: bash

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/seulchuksaeng .
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKER_REPO }}/seulchuksaeng --build-arg PROPERTIES=./src/main/resources/application.yml -f Dockerfile .
          docker push ${{ secrets.DOCKER_REPO }}/seulchuksaeng

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: root
          password: ${{ secrets.PASSWORD }}
          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/seulchuksaeng
            docker-compose up -d
            docker image prune -f


            


